The study used several metrics to analyze GitHub-hosted hackathon projects, and in doing so, made several assumptions about the data and itâ€™s meaning. The study defines the length of a development period as the difference between the oldest and most recent commit dates, and a value of 0 is recorded in cases where there are less than 2 commits. The study also defined projects that are receiving continual development to be those above the threshold of a 100 daylong development period and a commits over development period value of at least 0.2. In this study, a series of Python programs were employed for data collection and extraction in combination with BeautifulSoup,a powerful Python library designed for getting data out of HTML and other markup languages. To limit the scope of what hackathon events would be considered and to reduce the number of repositories which had become inactive over time, only hackathon submissions from 2018-2019 were considered. Any projects containing commit dates before January 1st, 2018, or after December 31st, 2019, were not processed, but recorded in a subset for future work. The steps of this process are described below.
I. A script iterated through each hackathon entry on MLH.io and appended the event name to a list, and the list was written to an output file.
II. Another script used string manipulation to extract the eventnames from the list generated in step (I). Each event name was then manually searched for on Devpost. This step was not scripted due to the wide variety of mismatches possible. Only hackathons that occurred between January 1st, 2018, and December 31st, 2019, were included in the data set. Additional data related to the searching process was also collected.
III. From this list of event Devpost submission pages, [a script] was used to extract from each individual event page all links attached to project descriptions. This created a list of direct links to GitHub repositories used for development at hackathon events.
IV. Each GitHub repository was visited and an attempt was made to collect all commit dates for each project. A variety of technical challenges had to be overcome in order to get a complete and valid list. For example, 404 errors, projects that displayed commit dates before 2018 (indicating that they had been started before the hackathon begun), and cases where there were no commits were published. For projects which were not otherwise filtered outseveral metrics were calculated: the difference between the oldest commit and the most recent commit, the number of distinct commitdates, the longest break between commits, the ratio of number of distinct commits over development period, and which projects had development periods longer than 100 days.
V. Lastly, the generated data set was sorted and processed intographs and visual representations of the findings along with the subset of projects for which development lasted over 100 days. No-table statistics about the development period of hackathon projects was then recorded and analyzed to better understand if hackathon participants continue to develop their projects after the event is over.
